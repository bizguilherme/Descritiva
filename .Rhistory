##################################
rm(list=ls())
?LearningStats::diffvariance.test(x1=)
LearningStats::diffvariance.test(sc1=2.8,sc2=0.9,n1=3,n2=5,alternative = "greater")
qnorm(.9)
rm(list=ls())
#### Exercício 4
## Teste de hipótese para proporção
LearningStats::proportion.test(95,100,0.90,alternative = "greater")
#### Exercício 1
#### Distribuição normal e Dist. amostral da média.
# A)
pnorm(48,50,5)
# B)
pnorm(52,50,5)-pnorm(47,50,5)
# C)
pnorm(48,50,1)
# D)
pnorm(51,50,1)-pnorm(48,50,1)
#### Exercício 2
#### Intervalo de confiança para média
dados=scan(nmax=24,dec=",")
LearningStats::Mean.CI(dados,conf.level = .95)
#### Exercício 3
#### Intervalo de confiança para a proporção
LearningStats::proportion.CI(10,50)
#### Exercício 3
#### Intervalo de confiança para a proporção
LearningStats::proportion.CI(10,50,conf.level = .95)
## B)
round(1.96^2*0.2*0.8/0.02^2)
#### Exercício 5
#### Teste de hipótese para variâncias e medias
ma=c(3,3.3,3.2,3,3.3,3.4,3.6,3.3,3.2,3)
pin=c(3.3,3.1,3.2,3.2,2.7,2.8,3,3.2,3.1,2.9)
mean(ma)
var(ma)
mean(pin)
var(pin)
#### Exercício 5
#### Teste de hipótese para variâncias e medias
ma=c(3,3.3,3.2,3,3.3,2.8,3.6,3.3,3.2,3.5)
mean(ma)
var(ma)
pin=c(3.3,3.1,3.2,3.2,2.7,2.8,2.9,3.2,3.1,2.9)
mean(ma)
var(ma)
mean(pin)
var(pin)
#### a)
LearningStats::variance.test(ma,pin,alternative = "greater")
#### a)
LearningStats::diffvariance.test(ma,pin,alternative = "greater")
var.test(ma,pin,alternative = "greater")
#### b)
LearningStats::diffmean.test(ma,pin,var.equal = T)
11/51
18/51
51-29
22/51
15/51
13/51
rm(list=ls())
require(readxl)
dados <- read_excel("C:/Users/GuilhermeBiz/OneDrive - Universidade Estadual de Londrina/Assessoria/2024/Elisete/Resultados Experimento com residuos.xlsx")
dados=dados[1:19,]
require(rsm)
dad=coded.data(dados, x1~(Soja-6)/2, x2~(Arroz-6)/2, x3~(Melaço-6)/2)
mod=rsm(`Absorbancia (510nm)`~SO(x1,x2,x3), data=dad)
mod
dados <- read_excel("C:/Users/GuilhermeBiz/OneDrive - Universidade Estadual de Londrina/Assessoria/2024/Elisete/Resultados Experimento com residuos.xlsx")
dados=dados[1:19,]
require(rsm)
dad=coded.data(dados, x1~(Soja-6)/2, x2~(Arroz-6)/2, x3~(Melaço-6)/2)
mod=rsm(`Absorbancia (510nm)`~SO(x1,x2,x3), data=dad)
mod
summary(mod)
mod2=rsm(`Absorbancia (510nm)`~FO(x1,x2,x3)+PQ(x1,x2,x3), data=dad)
require(agricolae)
trat=LETTERS[1:5]
trat=LETTERS[1:5]
trat
design.crd(trat,r=5,serie=2,seed=10)
design.crd(trat,r=5,serie=2,seed=10)$book
design.crd(trat,r=5,serie=1,seed=10)$book
design.crd(trat,r=5,serie=0,seed=10)$book
design.crd(trat,r=5,serie=0,seed=10)$book
design.crd(trat,r=5,serie=0)$book
design.crd(trat,r=5,serie=0)$book
AgroR::sketch(trat,r=5,design = "DIC")
#### Exemplo 1
rm(list=ls())
resp=scan(dec=",",nmax=25)
trat=LETTERS[1:5]
trat=rep(LETTERS[1:5],5)
cbind(resp,trat)
trat=rep(LETTERS[1:5],each=5)
cbind(resp,trat)
## Modelo Estatístico
mod=aov(resp~trat)
### Verificar pressupostos
## Normalidade
shapiro.test(mod$residuals)
## Homocedasticidade
bartlett.test(mod$residuals~trat)
### ANOVA
anova(mod)
#### Exercício 1
rm(list=ls())
resp=scan(dec=",",nmax=20)
trat=rep(LETTERS[1:5],each=4)
### Modelo estatístico
mod=aov(resp~trat)
### Verificar pressupostos
## Normalidade
shapiro.test(mod$residuals)
## Homocedasticidade
bartlett.test(mod$residuals~trat)
car::leveneTest(mod$residuals~trat,center=mean)
### ANOVA
anova(mod)
rm(list=ls())
require(agricolae)
trat=LETTERS[1:5]
trat
design.crd(trat,r=5)
design.crd(trat,r=5,serie = 0)
design.crd(trat,r=5,serie = 0,seed=51)
design.crd(trat,r=5,serie = 0)
design.crd(trat,r=5,serie = 0)
design.crd(trat,r=5)
design.crd(trat,r=5,seed=10,serie=0)$book
AgroR::sketch(trat,r=5,design="DIC")
#### Exemplo 1
rm(list=ls())
resp=scan(dec=",",nmax = 25)
trat=rep(LETTERS[1:5],each=5)
trat
cbind(trat,resp)
#### Modelo estatístico
mod=aov(resp~trat)
### Pressupostos
### Normalidade dos erros
shapiro.test(mod$residuals)
### Homogeneidade das variâncias
bartlett.test(mod$residuals~trat)
### ANOVA
anova(mod)
####### Exemplo 1
rm(list=ls())
resp=scan(dec=",",nmax=20)
trat=rep(LETTERS[1:5],each=4)
#### Modelo estatístico
mod=aov(resp~trat)
### Pressupostos
### Normalidade dos erros
shapiro.test(mod$residuals)
### Homogeneidade das variâncias
bartlett.test(mod$residuals~trat)
car::leveneTest(mod$residuals~trat,center=mean)
### ANOVA
anova(mod)
qf(0.95,4,12)
rm(list=ls())
resp=scan(dec=",",nmax=20)
trat=rep(LETTERS[1:5],each=4)
bloco=rep(paste("b",1:4),5)
bloco
paste("b",1:4)
AgroR::DBC(trat,bloco,resp)
AgroR::DBC(trat,bloco,resp,mcomp="tukey")
AgroR::DBC(trat,bloco,resp,mcomp="duncan")
AgroR::dunnett(trat,resp,control="E",model="DBC",block=bloco)
AgroR::dunnett(trat,resp,control="E",model="DBC",block=bloco)
AgroR::dunnett(trat,resp,control="E",model="DBC",block=bloco)
##### Exemplo 2
rm(list=ls())
resp=scan(dec=",",nmax=24)
resp
trat=rep(LETTERS[1:6],4)
trat
bloco=rep(paste("B",1:4),each=6)
AgroR::DBC(trat,bloco,resp,mcomp="tukey")
AgroR::DBC(trat,bloco,resp,mcomp="duncan")
AgroR::dunnett(trat,resp,control="F",model="DBC",block=bloco)
rm(list=ls())
resp=scan(dec=",",nmax = 20)
trat=rep(LETTERS[1:5],each=4)
trat
paste("b",1:4)
bloco=rep(paste("b",1:4),5)
bloco
AgroR::DBC(trat,bloco,resp,mcomp = "tukey")
AgroR::DBC(trat,bloco,resp,mcomp = "duncan")
AgroR::dunnett(trat,resp,control="E",model="DBC",block=bloco)
##### Exemplo 2
rm(list=ls())
resp=scan(dec=",",nmax=24)
resp
trat=rep(LETTERS[1:6],4)
trat
bloco=rep(paste("B",1:4),each=6)
bloco
AgroR::DBC(trat,bloco,resp,mcomp="tukey")
AgroR::DBC(trat,bloco,resp,mcomp="duncan")
AgroR::dunnett(trat,resp,control="F",model="DBC",block=bloco)
3*24
72-12
72*6
?AgroR
??AgroR
library(AgroR)
data(mirtilo)
with(mirtilo, conjdic(trat, bloco, exp, resp))
View(mirtilo)
library(readxl)
dados <- read_excel("Library/CloudStorage/OneDrive-UniversidadeEstadualdeLondrina/Disciplinas/2017/Agronomia/15- Fatorial/dados_cafeeiro.xlsx",
col_types = c("text", "text", "text",
"text", "text", "numeric"))
View(dados)
library(readxl)
dados <- read_excel("Library/CloudStorage/OneDrive-UniversidadeEstadualdeLondrina/Disciplinas/2017/Agronomia/15- Fatorial/dados_cafeeiro.xlsx",
col_types = c("text", "text", "text",
"text", "text", "numeric"))
AgroR::FAT3DBC(dados$N,dados$P,dados$K,dados$bloco,dados$prod)
ExpDes.pt::fat3.dbc(dados$N,dados$P,dados$K,dados$bloco,dados$prod)
library(AgroR)
data(mirtilo)
View(mirtilo)
rm(list = ls())
require(readxl)
dados = read_excel("C:/Users/samue/UEL/Atividades/Estatistica Exp Seminário.xlsx", sheet = 1,
col_types = c("text", "text", "text", "numeric"))
library(AgroR)
?conjudbc
?conjdbc
install.packages("easyanova")
library(readxl)
dados <- read_excel("Downloads/alfaceam (1).xlsx")
View(dados)
AgroR::FAT2DIC(dados$Irrigacao,dados$Adubacao,dados$Resp)
AgroR::FAT2DIC(dados$Irrigacao,dados$Adubacao,dados$Resp)
install.packages("tidyverse",dep=T)
mtcars
dput(mtcars)
mpg
library(tidyverse)
ggplot(data=mpg)
ggplot(data=mpg)+
geom_point(mapping = aes(x=displ,y=hwy))
### Exercícios
#1
ggplot(data=mpg)
#1
mtcars
#1
nrow(mtcars)
dim(mtcars)
#3
?mpg
#4
ggplot(data=mpg)+
geom_point(mapping = aes(x=cyl,y=hwy))
#4
ggplot(data=mpg)+
geom_point(mapping = aes(x=cyl,y=cyl))
#4
ggplot(data=mpg)+
geom_point(mapping = aes(x=hwy,y=cyl))
#4
ggplot(data=mpg)+
geom_point(mapping = aes(x=cyl,y=hwy))
#5
ggplot(data=mpg)+
geom_point(mapping = aes(x=class,y=drv))
citation((package="ExpDes.pt"))
install.packages("quarto",dep=T)
setwd("~/OneDrive - Universidade Estadual de Londrina/Disciplinas/Agronomia/Estatistica Basica/2- Estatística Descritiva/Descritiva")
#| paged-print: false
dados=read.table("https://www.uel.br/pessoal/biz/pages/arquivos/Agronomia/dados/dados_milho.txt",head=T)
head(dados)
dados$Altura_espiga
kableExtra::kable(dados$Altura_espiga)
kableExtra::kable(dados$Altura_espiga,caption = "testes")
kableExtra::?kablel
kableExtra::?kable
?kableExtra
dim(dados$Altura_espiga)
dim(dados$Altura_espiga)=c(4,8)
dados$Altura_espiga
dim(dados$Altura_espiga)[4,8]
dados$Altura_espiga[4,8]
dados$Altura_espiga
alt=dados$Altura_espiga
dim(alt)
dim(alt)
dim(alt)=c(4,8)
alt
kableExtra::kable(alt)
alt=dados$Altura_espiga
dim(alt)=c(4,8)
kableExtra::kable(alt)
alt=dados$Altura_espiga
dim(alt)=c(4,8)
kableExtra::kable(alt,caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
#| paged-print: false
dados=read.table("https://www.uel.br/pessoal/biz/pages/arquivos/Agronomia/dados/dados_milho.txt",head=T)
head(dados)
alt=dados$Altura_espiga
dim(alt)=c(4,8)
kableExtra::kable(alt,caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
kable(alt,caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
knitr::kable(alt,caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
knitr::kable(data.frame(alt),caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
data.frame(alt)
data.frame(alt,head=F
)
data.frame(alt,head(F))
table(alt)
knitr::kable(alt,caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988","rst")
knitr::kable(alt,caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
knitr::kable(alt,"rst", caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
knitr::kable(alt, caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
knitr::kable(alt, format = "html",caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
install.packages("gt")
gt::gt(alt,caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
alt=dados$Altura_espiga
dim(alt)=c(4,8)
gt::gt(alt,caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
gt::gt(alt,caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
install.packages("rlang")
install.packages("rlang")
gt::gt(alt,caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
as.data.frame(alt)
dados
alt=as.data.frame(alt)
alt
colnames(alt)=NULL
alt
alt=dados$Altura_espiga
dim(alt)=c(4,8)
alt=as.data.frame(alt,colnames=NULL)
gt::gt(alt,caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
knitr::kable(alt,caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
alt=dados$Altura_espiga
dim(alt)=c(4,8)
alt=as.data.frame(alt,colnames=NULL)
knitr::kable(alt,caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
xtable::xtable(alt,caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
alt=as.data.frame(alt,colnames=NULL)
xtable::xtable(alt,caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
tab=xtable::xtable(alt,caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
print(tab)
print(tab,type = "html")
alt=as.data.frame(alt,colnames=NULL)
gt::gt(alt,caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
colnames(alt)=NULL
gt::gt(alt,caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
colnames(alt)
alt
gt::gt(alt,caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
alt=dados$Altura_espiga
dim(alt)=c(4,8)
alt=as.data.frame(alt)
colnames(alt)=NULL
gt::gt(alt,caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
alt
knitr::kable(alt,caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
?kable
knitr::kable(alt,caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988",format = "html")
install.packages("huxtable")
library(huxtable)
hux(alt)
hux(alt,set_outer_borders(.4))
as.hux(alt)
as.=_hux(alt)
as_hux(alt)
alt=dados$Altura_espiga
dim(alt)=c(4,8)
as_hux(alt)
set_outer_borders(.4)
set_outer_borders(0.4)
as_hux(alt) |>
knitr::kable(alt,caption = "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988",format = "html")
as_hux(alt) |>
set_outer_borders(0.4))
as_hux(alt) |>
set_outer_borders(0.4)
as_hux(alt) |>
set_outer_borders(0.4)
set_caption("TEste")
set_caption(alt, "Teste")
as_hux(alt) |>
set_outer_borders(0.4)
alt=as_hux(alt) |>
set_outer_borders(0.4)
set_caption(alt, "Teste")
alt
alt=dados$Altura_espiga
dim(alt)=c(4,8)
alt
hux(alt)
hux(alt,set_outer_borders(0.4))
alt=dados$Altura_espiga
alt=as_hux(alt) |>
set_outer_borders(0.4)
alt=as_hux(alt) |>
set_outer_borders(0.4)|>
set_caption(alt, "Teste")
alt=as_hux(alt) |>
set_outer_borders(0.4)
set_caption(alt, "Teste")
alt=dados$Altura_espiga
dim(alt)=c(4,8)
alt=as_hux(alt) |>
set_outer_borders(0.4)
set_caption(alt, "Teste")
alt
set_caption(alt, "Alturas de espigas (cm) de um experimento de competição de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
alt=as_hux(alt) |>
set_bottom_border(col = 1,0.4)
alt
alt=as_hux(alt) |>
set_bottom_border(col = c(1,4),0.4)
?set_bottom_border
set_bottom_border[1,](0.4)
set_bottom_border[1,](alt,0.4)
sbottom_border(alt)[1,]=0.4
bottom_border(alt)[1,]=0.4
alt
alt=as_hux(alt)
bottom_border(alt)[0,]=0.4
alt
alt=matrix(alt,4,8,byrow=T)
library(huxtable)
alt=sort(dados$Altura_espiga)
alt=matrix(alt,4,8,byrow=T)
alt=sort(dados$Altura_espiga)
abline(h=0)
barplot(table(dados$Resistencia)[c("r","mr","ms","s")],xlab="Resistência à ferrugem",ylab="Frequências",col="green4",density=50,ylim=c(0,12))
abline(h=0)
#| paged-print: false
dados=read.table("https://www.uel.br/pessoal/biz/pages/arquivos/Agronomia/dados/dados_milho.txt",head=T)
head(dados)
library(huxtable)
alt=dados$Altura_espiga
dim(alt)=c(4,8)
alt=as_hux(alt)
top_border(alt)[1,]=0.4
bottom_border(alt)[4,]=0.4
set_caption(alt, "Alturas de espigas (cm) de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
alt
library(huxtable)
alt=sort(dados$Altura_espiga)
alt=matrix(alt,4,8,byrow=T)
alt=as_hux(alt)
top_border(alt)[1,]=0.4
bottom_border(alt)[4,]=0.4
set_caption(alt, "Alturas de espigas (cm) de híbridos de milho para a região de Chapecó, SC - safra: 1987/1988")
alt
barplot(table(dados$Resistencia)[c("r","mr","ms","s")],xlab="Resistência à ferrugem",ylab="Frequências",col="green4",density=50,ylim=c(0,12))
abline(h=0)
?barplot
barplot(table(dados$Resistencia)[c("r","mr","ms","s")],xlab="Resistência à ferrugem",ylab="Frequências",col="green4",density=50,ylim=c(0,12),main="Teste")
abline(h=0)
barplot(table(dados$Resistencia)[c("r","mr","ms","s")],xlab="Resistência à ferrugem",ylab="Frequências",col="green4",density=50,ylim=c(0,12),sub="Teste")
abline(h=0)
alt
### Importando os dados
dados=read.table("http://www.uel.br/pessoal/biz/pages/arquivos/Agronomia/dados/dados_milho.txt",head=T)
### Cabeçalho dos dados
head(dados)
### Dados Brutos de altura de espigas - Va dentro de dados
dados$Altura_espiga
### Rol de altura de espigas
sort(dados$Altura_espiga)
#######################################################################
#### Exemplo 1 de Resitência de uvas Niágara
resis=scan(dec=",",nmax=36)
#######################################################################
### Tabela de distribuição de Frequências para a variável Resistência à Ferrugem
### Precisamos do pacote epiDisplay
#install.packages("epiDisplay")
require(epiDisplay)
tab1(factor(dados$Resistencia,levels = c("r","mr","ms","s")))
require(fdth)
tab=fdt(dados$Rendimento,start = 3973,end = 6393,h = 484)
tab
### Ou pelo pacote epiDisplay
require(epiDisplay)
tab1(cut(dados$Rendimento,breaks = c(3973,4457,4941,5425,5909,6393),right=F))
#### Histograma da variável rendimento
s=seq(min(dados$Rendimento),6393,484)
hist(dados$Rendimento,breaks=s,xaxt="n",ylim=c(0,14),
border="black",xlab="Rendimento médio (kg/ha)",density=30,
las=1,ylab="Densidade de frequências",col="green4",main="")
axis(1,s,line=-.6)
abline(h=0,cex=4)
rm(list=ls())
### Importando os dados
dados=read.table("http://www.uel.br/pessoal/biz/pages/arquivos/Agronomia/dados/dados_milho.txt",head=T)
### Cabeçalho dos dados
head(dados)
### Dados Brutos de altura de espigas - Va dentro de dados
dados$Altura_espiga
### Rol de altura de espigas
sort(dados$Altura_espiga)
#######################################################################
#### Exemplo 1 de Resitência de uvas Niágara
resis=scan(dec=",",nmax=36)
### Rol de Resistência de uvas
sort(resis)
